//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : HW546 - Knight Offline
//  @ File Name : Rogue.java
//  @ Date : 4/7/2015
//  @ Author : Alican Kurutepe - 1902618
//
//
import java.awt.*;

public class Rogue extends BasicKnight{

    private final int initSpeed = 100;
    private final int initHitPoint = 500;

 
       
    Rogue (Color teamColor, int newPosX, int newPosY){
        
        this.setSpeed(initSpeed);
        this.setHitPoint(initHitPoint);
        this.setPosX(newPosX);
        this.setPosY(newPosY);
        this.setScore(0);
        this.setScoreTotal(0);
        this.setStrategy(null);
        this.setTarget(null);
        this.setKnightColor(teamColor);
        
    }
    @Override
    public void attackNormal(){
        
        if((Math.abs(this.getPosX()-this.getTarget().getPosX()) <= 10) && (Math.abs(this.getPosY()-this.getTarget().getPosY()) <= 10))
        {
            
            if(this.getTarget().getHitPoint() > 0)
            {
                this.setNormalAttackDone(true);
                if(this.getTarget().getHitPoint()<150){
                    this.setDmg(this.getDmg()+this.getTarget().getHitPoint());
                    this.getTarget().setHitPoint((this.getTarget().getHitPoint()-150));
                }
                else{
                    this.setDmg(this.getDmg()+150);
                    this.getTarget().setHitPoint((this.getTarget().getHitPoint()-150));
                }
                this.setSpeed(this.initSpeed); 
                this.setSpecialAttackDone(false);
                
                
            }
            if(this.getTarget().getHitPoint() <= 0)
            {
                this.setScore(this.getScore()+75);
                this.setScoreTotal(this.getScoreTotal()+75);
                this.setKills(this.getKills()+1);
            }
        }
        
    }
    @Override
    public void attackSpecial(){
        if((Math.abs(this.getPosX()-this.getTarget().getPosX()) <= 100) && (Math.abs(this.getPosY()-this.getTarget().getPosY()) <= 100))
        {
            this.setSpeed(200);
            this.setSpecialAttackDone(true);
            if((Math.abs(this.getPosX()-this.getTarget().getPosX()) <= 10) && (Math.abs(this.getPosY()-this.getTarget().getPosY()) <= 10)){
                
                this.setSpecialAttackDone(false);
                if(this.getTarget().getHitPoint() > 0)
                {
                    
                    if(this.getTarget().getHitPoint()<250){
                        this.setDmg(this.getDmg()+this.getTarget().getHitPoint());
                        this.getTarget().setHitPoint((this.getTarget().getHitPoint()-250));
                    }
                    else{
                        this.setDmg(this.getDmg()+250);
                        this.getTarget().setHitPoint((this.getTarget().getHitPoint()-250));
                    }
                    this.setSpeed(this.initSpeed);
                    this.setSpecialAttackDone(false);

                }
                if(this.getTarget().getHitPoint() <= 0)
                {
                    this.setScore(this.getScore()+75);
                    this.setScoreTotal(this.getScoreTotal()+75);
                    this.setKills(this.getKills()+1);
                }
            }
        }
        
    }
  
    @Override
    public void draw(Graphics g, Color newColor) {
        int[] x = new int[3];
        int[] y = new int[3];
        int n;
        Graphics2D g2d = (Graphics2D) g;
		
	g2d.setRenderingHint (RenderingHints.KEY_ANTIALIASING,   RenderingHints.VALUE_ANTIALIAS_ON);
		
	g2d.setPaint(newColor);
	
        x[0]=this.getPosX(); x[1]=this.getPosX()+15 ; x[2]=this.getPosX()+30;
        y[0]=this.getPosY(); y[1]=this.getPosY()+30 ; y[2]=this.getPosY();
        n = 3;

        Polygon p = new Polygon(x, y, n);  

        g.fillPolygon(p);     
        
	

		
	g2d.setPaint(Color.YELLOW);
        g2d.drawString(String.valueOf(this.getHitPoint()), this.getPosX()+4, this.getPosY()+18);
        
        
        if(this.isSpecialAttackDone())
        {
            g2d.setPaint(this.getKnightColor());
            
            g2d.drawLine(this.getPosX()+10,this.getPosY()+10,this.getTarget().getPosX()+10, this.getTarget().getPosY()+10);
           
            
        }
    }

}
